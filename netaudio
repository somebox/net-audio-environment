#!/usr/bin/env ruby 

require 'bundler/setup'
require "unimidi"
require "midi"
require "awesome_print"
require 'thread'

# prompt the user to select an input and output in the console...

#@i = UniMIDI::Input.gets
@o =  UniMIDI::Output.use(:first)

#$stdin.sync = true
#$stdout.sync = true
# 01:38:53.648535 00:1f:5b:32:dc:24 (oui Unknown) > 90:84:0d:d3:0e:cc (oui Unknown), IPv4, length 1444: fozmac.51413 > host86-171-99-115.range86-171.btcentralplus.com.54294: UDP, length 1402
# DUMP_FORMAT = %r{length.*[\w\.\-]+\.(\w+) > [\w+\.\-]+\.(\w+)}
  FORMAT = %r{zeus: ([\d\.]+) .* \"([A-Z]+) .*\" (\d+)}

#begin

  #IO.popen('/usr/bin/nc -u -k -l 51414',"r") do |io|
  #  puts io.read
  #end

# socat -t 0 - UDP4-RECV:51414,crlf |./netaudio

while true
  line = STDIN.readline '#!'
  ip, method, status = line.match(FORMAT).captures rescue ['','GET','200']
  request = {ip: ip, method: method, status: status}
  p line
  note = [36, 40, 43, 48, 52, 55, 60, 64, 67][ip.split('.').last.to_i % 4]+12
  
  #$stdout.flush 
  if (rand*100).to_i == 0
    offset = 2
  else
    offset = 0
  end

  Thread.new do
    MIDI.using(@o) do
      #octave 4
      case 
      when status =~ /20\d/
        play(offset+note+12, 0.04)
      when status =~ /30\d/
        play(offset+note, 0.04)
      when status =~ /40\d/
        play(offset+note-12, 0.15)
      when status =~ /50\d/
        play(offset+note-24, 0.55)
      else
        #play('B3', 0.15)
      end
    end
  end
end

# MIDI.using(@o) do

#   5.times do |oct|
#     octave oct
#     %w{C E G B}.each { |n| 
#       puts n
#       play(n, 0.25) 
#     }
#   end

# end


